namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace frus = "http://history.state.gov/frus/ns/1.0"
namespace ns1 = "http://www.isocat.org/ns/dcr"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
default namespace tei = "http://www.tei-c.org/ns/1.0"
namespace teix = "http://www.tei-c.org/ns/Examples"
namespace xi = "http://www.w3.org/2001/XInclude"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2017-07-18T19:53:33Z. .
# TEI Edition: Version 2.7.0. Last updated on
#	16th September 2014, revision 13036
# TEI Edition Location: http://www.tei-c.org/Vault/P5/Version 2.7.0/
#

#
macro.paraContent = (text | model.gLike | model.phrase | model.inter | model.global | lg)*
macro.limitedContent = (text | model.limitedPhrase | model.inter)*
macro.phraseSeq = (text | model.gLike | model.phrase | model.global)*
macro.specialPara =
    (text | model.gLike | model.phrase | model.inter | model.divPart | model.global)*
data.certainty = "high" | "medium" | "low" | "unknown"
data.probability = xsd:double { minInclusive = "0" maxInclusive = "1" }
data.numeric =
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
data.count = xsd:nonNegativeInteger
data.temporal.w3c =
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
data.truthValue = xsd:boolean
data.language = xsd:language | ""
data.outputMeasurement =
    xsd:token { pattern = "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|gd|rem|vw|vh|vm)" }
data.pointer = xsd:anyURI
data.version = xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
data.versionNumber = xsd:token { pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}" }
data.word = xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
data.text = xsd:string
data.name = xsd:Name
data.enumerated = data.name
data.temporal.iso =
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
att.ascribed.attributes = att.ascribed.attribute.who
att.ascribed.attribute.who =
    
    ## indicates the person, or group of people, to whom the element content is ascribed.
    attribute who {
        list { data.pointer+ }
    }?
att.canonical.attributes = att.canonical.attribute.key, att.canonical.attribute.ref
att.canonical.attribute.key =
    
    ## provides an externally-defined means of identifying the entity (or entities) being named, using a coded value of some kind.
    attribute key { data.text }?
att.canonical.attribute.ref =
    
    ## (reference) provides an explicit means of locating a full definition for the entity being named by means of one or more URIs.
    attribute ref {
        list { data.pointer+ }
    }?
att.ranging.attributes =
    att.ranging.attribute.atLeast,
    att.ranging.attribute.atMost,
    att.ranging.attribute.min,
    att.ranging.attribute.max,
    att.ranging.attribute.confidence
att.ranging.attribute.atLeast =
    
    ## gives a minimum estimated value for the approximate measurement.
    attribute atLeast { data.numeric }?
att.ranging.attribute.atMost =
    
    ## gives a maximum estimated value for the approximate measurement.
    attribute atMost { data.numeric }?
att.ranging.attribute.min =
    
    ## where the measurement summarizes more than one observation or a range, supplies the minimum value observed.
    attribute min { data.numeric }?
att.ranging.attribute.max =
    
    ## where the measurement summarizes more than one observation or a range, supplies the maximum value observed.
    attribute max { data.numeric }?
att.ranging.attribute.confidence =
    
    ## specifies the degree of statistical confidence (between zero and one) that a value falls within the range specified by min and max, or the proportion of observed values that fall within that range.
    attribute confidence { data.probability }?
att.dimensions.attributes =
    att.ranging.attributes, att.dimensions.attribute.unit, att.dimensions.attribute.quantity
att.dimensions.attribute.unit =
    
    ## names the unit used for the measurement
    ## Suggested values include: 1] cm(centimetres) ; 2] mm(millimetres) ; 3] in(inches) ; 4] lines; 5] chars(characters) 
    attribute unit {
        
        ## (centimetres) 
        "cm"
        | 
          ## (millimetres) 
          "mm"
        | 
          ## (inches) 
          "in"
        | 
          ## lines of text
          "lines"
        | 
          ## (characters) characters of text
          "chars"
        | xsd:Name
    }?
att.dimensions.attribute.quantity =
    
    ## specifies the length in the units specified
    attribute quantity { data.numeric }?
att.cReferencing.attributes = att.cReferencing.attribute.cRef
att.cReferencing.attribute.cRef =
    
    ## (canonical reference) specifies the destination of the pointer by supplying a canonical reference expressed using the scheme defined in a refsDecl element in the TEI header
    attribute cRef { data.text }?
att.datable.w3c.attributes =
    att.datable.w3c.attribute.when,
    att.datable.w3c.attribute.notBefore,
    att.datable.w3c.attribute.notAfter,
    att.datable.w3c.attribute.from,
    att.datable.w3c.attribute.to
att.datable.w3c.attribute.when =
    
    ## supplies the value of the date or time in a standard form, e.g. yyyy-mm-dd.
    attribute when { data.temporal.w3c }?
att.datable.w3c.attribute.notBefore =
    
    ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
    attribute notBefore { data.temporal.w3c }?
att.datable.w3c.attribute.notAfter =
    
    ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
    attribute notAfter { data.temporal.w3c }?
att.datable.w3c.attribute.from =
    
    ## indicates the starting point of the period in standard form, e.g. yyyy-mm-dd.
    attribute from { data.temporal.w3c }?
att.datable.w3c.attribute.to =
    
    ## indicates the ending point of the period in standard form, e.g. yyyy-mm-dd.
    attribute to { data.temporal.w3c }?
att.datable.attributes =
    att.datable.w3c.attributes,
    att.datable.iso.attributes,
    att.datable.custom.attributes,
    att.datable.attribute.calendar,
    att.datable.attribute.period
att.datable.attribute.calendar =
    
    ## indicates the system or calendar to which the date represented by the content of this element belongs.
    attribute calendar { data.pointer }?
sch:pattern [
    id = "frus-att.datable-calendar-calendar-constraint-rule-1"
    "\x{a}" ~
    "      "
    sch:rule [
        context = "tei:*[@calendar]"
        "\x{a}" ~
        "            "
        sch:assert [
            test = "string-length(.) gt 0"
            "\x{a}" ~
            "@calendar indicates the system or calendar to which the date represented by the content of this element\x{a}" ~
            "belongs, but this "
            sch:name [ ]
            " element has no textual content."
        ]
        "\x{a}" ~
        "          "
    ]
    "\x{a}" ~
    "   "
]
att.datable.attribute.period =
    
    ## supplies a pointer to some location defining a named period of time within which the datable item is understood to have occurred.
    attribute period { data.pointer }?
att.datcat.attributes = att.datcat.attribute.datcat, att.datcat.attribute.valueDatcat
att.datcat.attribute.datcat =
    
    ## contains a PID (persistent identifier) that aligns the given element with the appropriate Data Category (or categories) in ISOcat.
    attribute ns1:datcat {
        list { data.pointer+ }
    }?
att.datcat.attribute.valueDatcat =
    
    ## contains a PID (persistent identifier) that aligns the content of the given element or the value of the given attribute with the appropriate simple Data Category (or categories) in ISOcat.
    attribute ns1:valueDatcat {
        list { data.pointer+ }
    }?
att.divLike.attributes = empty
att.responsibility.attributes =
    att.source.attributes, att.responsibility.attribute.cert, att.responsibility.attribute.resp
att.responsibility.attribute.cert =
    
    ## (certainty) signifies the degree of certainty associated with the intervention or interpretation.
    attribute cert { data.certainty }?
att.responsibility.attribute.resp =
    
    ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
    attribute resp {
        list { data.pointer+ }
    }?
att.global.attributes =
    att.global.linking.attributes,
    att.global.analytic.attributes,
    att.global.facs.attributes,
    att.global.change.attributes,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.attribute.xmllang,
    att.global.attribute.rend,
    att.global.attribute.style,
    att.global.attribute.rendition,
    att.global.attribute.xmlbase,
    att.global.attribute.xmlspace
att.global.attribute.xmlid =
    
    ## (identifier) provides a unique identifier for the element bearing the attribute.
    attribute xml:id { xsd:ID }?
att.global.attribute.n =
    
    ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
    attribute n { data.text }?
att.global.attribute.xmllang =
    
    ## (language) indicates the language of the element content using a tag generated according to BCP 47.
    attribute xml:lang { data.language }?
att.global.attribute.rend =
    
    ## (rendition) indicates how the element in question was rendered or presented in the source text.
    attribute rend {
        list { data.word+ }
    }?
att.global.attribute.style =
    
    ## contains an expression in some formal style definition language which defines the rendering or presentation used for this element in the source text
    attribute style { data.text }?
att.global.attribute.rendition =
    
    ## points to a description of the rendering or presentation used for this element in the source text.
    attribute rendition {
        list { data.pointer+ }
    }?
att.global.attribute.xmlbase =
    
    ## provides a base URI reference with which applications can resolve relative URI references into absolute URI references.
    attribute xml:base { data.pointer }?
att.global.attribute.xmlspace =
    
    ## signals an intention about how white space should be managed by applications.
    attribute xml:space {
        
        ## signals that the application's default white-space processing modes are acceptable
        "default"
        | 
          ## indicates the intent that applications preserve all white space
          "preserve"
    }?
att.media.attributes =
    att.media.attribute.width, att.media.attribute.height, att.media.attribute.scale
att.media.attribute.width =
    
    ## Where the media are displayed, indicates the display width
    attribute width { data.outputMeasurement }?
att.media.attribute.height =
    
    ## Where the media are displayed, indicates the display height
    attribute height { data.outputMeasurement }?
att.media.attribute.scale =
    
    ## Where the media are displayed, indicates a scale factor to be applied when generating the desired display size
    attribute scale { data.numeric }?
att.resourced.attributes = att.resourced.attribute.url
att.resourced.attribute.url =
    
    ## (uniform resource locator) specifies the URL from which the media concerned may be obtained.
    attribute url { data.pointer }
att.naming.attributes = att.canonical.attributes, att.naming.attribute.role
att.naming.attribute.role =
    
    ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
    attribute role {
        list { data.enumerated+ }
    }?
att.placement.attributes = att.placement.attribute.place
att.placement.attribute.place =
    
    ## specifies where this item is placed
    ## Suggested values include: 1] below; 2] bottom; 3] margin; 4] top; 5] opposite; 6] overleaf; 7] above; 8] end; 9] inline; 10] inspace
    attribute place {
        list {
            (
             ## below the line
             "below"
             | 
               ## at the foot of the page
               "bottom"
             | 
               ## in the margin (left, right, or both)
               "margin"
             | 
               ## at the top of the page
               "top"
             | 
               ## on the opposite, i.e. facing, page
               "opposite"
             | 
               ## on the other side of the leaf
               "overleaf"
             | 
               ## above the line
               "above"
             | 
               ## at the end of e.g. chapter or volume.
               "end"
             | 
               ## within the body of the text.
               "inline"
             | 
               ## in a predefined space, for example left by an earlier scribe.
               "inspace"
             | xsd:Name)+
        }
    }?
att.typed.attributes = att.typed.attribute.type, att.typed.attribute.subtype
att.typed.attribute.type =
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    attribute type { data.enumerated }?
att.typed.attribute.subtype =
    
    ## provides a sub-categorization of the element, if needed
    attribute subtype { data.enumerated }?
sch:pattern [
    id = "frus-att.typed-subtypeTyped-constraint-rule-2"
    "\x{a}" ~
    "      "
    sch:rule [
        context = "*[@subtype]"
        "\x{a}" ~
        "        "
        sch:assert [
            test = "@type"
            "The "
            sch:name [ ]
            " element should not be categorized in detail with @subtype\x{a}" ~
            " unless also categorized in general with @type"
        ]
        "\x{a}" ~
        "      "
    ]
    "\x{a}" ~
    "   "
]
att.pointing.attributes =
    att.pointing.attribute.targetLang,
    att.pointing.attribute.target,
    att.pointing.attribute.evaluate
att.pointing.attribute.targetLang =
    
    ## specifies the language of the content to be found at the destination referenced by target, using a language tag generated according to BCP 47.
    attribute targetLang { data.language }?
sch:pattern [
    id = "frus-att.pointing-targetLang-targetLang-constraint-rule-3"
    "\x{a}" ~
    "      "
    sch:rule [
        context = "tei:*[not(self::tei:schemaSpec)][@targetLang]"
        "\x{a}" ~
        "            "
        sch:assert [
            test = "count(@target)"
            "@targetLang can only be used if @target is specified."
        ]
        "\x{a}" ~
        "          "
    ]
    "\x{a}" ~
    "   "
]
att.pointing.attribute.target =
    
    ## specifies the destination of the reference by supplying one or more URI References
    attribute target {
        list { data.pointer+ }
    }?
att.pointing.attribute.evaluate =
    
    ## specifies the intended meaning when the target of a pointer is itself a pointer.
    attribute evaluate {
        
        ## if the element pointed to is itself a pointer, then the target of that pointer will be taken, and so on, until an element is found which is not a pointer.
        "all"
        | 
          ## if the element pointed to is itself a pointer, then its target (whether a pointer or not) is taken as the target of this pointer.
          "one"
        | 
          ## no further evaluation of targets is carried out beyond that needed to find the element specified in the pointer's target.
          "none"
    }?
att.segLike.attributes = att.datcat.attributes, att.segLike.attribute.function
att.segLike.attribute.function =
    
    ## characterizes the function of the segment.
    attribute function { data.enumerated }?
att.sortable.attributes = att.sortable.attribute.sortKey
att.sortable.attribute.sortKey =
    
    ## supplies the sort key for this element in an index, list or group which contains it.
    attribute sortKey { data.word }?
att.edition.attributes = att.edition.attribute.ed, att.edition.attribute.edRef
att.edition.attribute.ed =
    
    ## (edition) supplies a sigil or other arbitrary identifier for the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
    attribute ed {
        list { data.word+ }
    }?
att.edition.attribute.edRef =
    
    ## (edition reference) provides a pointer to the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
    attribute edRef {
        list { data.pointer+ }
    }?
att.spanning.attributes = att.spanning.attribute.spanTo
att.spanning.attribute.spanTo =
    
    ## indicates the end of a span initiated by the element bearing this attribute.
    attribute spanTo { data.pointer }?
sch:pattern [
    id = "frus-att.spanning-spanTo-spanTo-2-constraint-rule-4"
    "\x{a}" ~
    "      "
    sch:rule [
        context = "tei:*[@spanTo]"
        "\x{a}" ~
        "            "
        sch:assert [
            test =
                "id(substring(@spanTo,2)) and following::*[@xml:id=substring(current()/@spanTo,2)]"
            "\x{a}" ~
            "The element indicated by @spanTo ("
            sch:value-of [ select = "@spanTo" ]
            ") must follow the current element "
            sch:name [ ]
            "\x{a}" ~
            "                  "
        ]
        "\x{a}" ~
        "          "
    ]
    "\x{a}" ~
    "   "
]
att.styleDef.attributes = att.styleDef.attribute.scheme, att.styleDef.attribute.schemeVersion
att.styleDef.attribute.scheme =
    
    ## identifies the language used to describe the rendition.
    attribute scheme {
        
        ## Cascading Stylesheet Language
        "css"
        | 
          ## Extensible Stylesheet Language Formatting Objects
          "xslfo"
        | 
          ## Informal free text description
          "free"
        | 
          ## A user-defined rendition description language
          "other"
    }?
att.styleDef.attribute.schemeVersion =
    
    ## supplies a version number for the style language provided in scheme.
    attribute schemeVersion { data.versionNumber }?
sch:pattern [
    id = "frus-att.styleDef-schemeVersion-schemeVersionRequiresScheme-constraint-rule-5"
    "\x{a}" ~
    "      "
    sch:rule [
        context = "tei:*[@schemeVersion]"
        "\x{a}" ~
        "            "
        sch:assert [
            test = "@scheme and not(@scheme = 'free')"
            "\x{a}" ~
            "              @schemeVersion can only be used if @scheme is specified.\x{a}" ~
            "            "
        ]
        "\x{a}" ~
        "          "
    ]
    "\x{a}" ~
    "   "
]
att.tableDecoration.attributes =
    att.tableDecoration.attribute.role,
    att.tableDecoration.attribute.rows,
    att.tableDecoration.attribute.cols
att.tableDecoration.attribute.role =
    
    ## indicates the kind of information held in this cell or in each cell of this row.
    ## Suggested values include: 1] label; 2] data
    [ a:defaultValue = "data" ]
    attribute role {
        
        ## labelling or descriptive information only.
        "label"
        | 
          ## data values.
          "data"
        | xsd:Name
    }?
att.tableDecoration.attribute.rows =
    
    ## indicates the number of rows occupied by this cell or row.
    [ a:defaultValue = "1" ] attribute rows { data.count }?
att.tableDecoration.attribute.cols =
    
    ## (columns) indicates the number of columns occupied by this cell or row.
    [ a:defaultValue = "1" ] attribute cols { data.count }?
att.transcriptional.attributes =
    att.transcriptional.attribute.hand,
    att.transcriptional.attribute.status,
    att.transcriptional.attribute.cause,
    att.transcriptional.attribute.seq
att.transcriptional.attribute.hand =
    
    ## indicates the hand of the agent which made the intervention.
    attribute hand { data.pointer }?
att.transcriptional.attribute.status =
    
    ## indicates the effect of the intervention, for example in the case of a deletion, strikeouts which include too much or too little text, or in the case of an addition, an insertion which duplicates some of the text already present.
    ## Sample values include: 1] duplicate; 2] duplicate-partial; 3] excessStart; 4] excessEnd; 5] shortStart; 6] shortEnd; 7] partial; 8] unremarkable
    [ a:defaultValue = "unremarkable" ] attribute status { data.enumerated }?
att.transcriptional.attribute.cause =
    
    ## documents the presumed cause for the intervention.
    attribute cause {
        
        ## repeated for the purpose of fixation
        "fix"
        | 
          ## repeated to clarify a previously illegible or badly written text or mark
          "unclear"
    }?
att.transcriptional.attribute.seq =
    
    ## (sequence) assigns a sequence number related to the order in which the encoded features carrying this attribute are believed to have occurred.
    attribute seq { data.count }?
att.translatable.attributes = att.translatable.attribute.versionDate
att.translatable.attribute.versionDate =
    
    ## specifies the date on which the source text was extracted and sent to the translator
    attribute versionDate { data.temporal.w3c }?
model.nameLike.agent = name | orgName | persName
model.nameLike.agent_alternation = name | orgName | persName
model.nameLike.agent_sequence = name, orgName, persName
model.nameLike.agent_sequenceOptional = name?, orgName?, persName?
model.nameLike.agent_sequenceOptionalRepeatable = name*, orgName*, persName*
model.nameLike.agent_sequenceRepeatable = name+, orgName+, persName+
model.segLike = seg
model.hiLike = hi | classification
model.hiLike_alternation = hi | classification
model.hiLike_sequence = hi, classification
model.hiLike_sequenceOptional = hi?, classification?
model.hiLike_sequenceOptionalRepeatable = hi*, classification*
model.hiLike_sequenceRepeatable = hi+, classification+
model.emphLike = gloss | term | title
model.emphLike_alternation = gloss | term | title
model.emphLike_sequence = gloss, term, title
model.emphLike_sequenceOptional = gloss?, term?, title?
model.emphLike_sequenceOptionalRepeatable = gloss*, term*, title*
model.emphLike_sequenceRepeatable = gloss+, term+, title+
model.highlighted = model.hiLike | model.emphLike
model.dateLike = date | time
model.dateLike_alternation = date | time
model.dateLike_sequence = date, time
model.dateLike_sequenceOptional = date?, time?
model.dateLike_sequenceOptionalRepeatable = date*, time*
model.dateLike_sequenceRepeatable = date+, time+
model.measureLike = notAllowed
model.measureLike_alternation = notAllowed
model.measureLike_sequence = empty
model.measureLike_sequenceOptional = empty
model.measureLike_sequenceOptionalRepeatable = empty
model.measureLike_sequenceRepeatable = notAllowed
model.egLike = notAllowed
model.egLike_alternation = notAllowed
model.egLike_sequence = empty
model.egLike_sequenceOptional = empty
model.egLike_sequenceOptionalRepeatable = empty
model.egLike_sequenceRepeatable = notAllowed
model.graphicLike = graphic
model.offsetLike = notAllowed
model.offsetLike_alternation = notAllowed
model.offsetLike_sequence = empty
model.offsetLike_sequenceOptional = empty
model.offsetLike_sequenceOptionalRepeatable = empty
model.offsetLike_sequenceRepeatable = notAllowed
model.pPart.msdesc = notAllowed
model.pPart.editorial = notAllowed
model.pPart.editorial_alternation = notAllowed
model.pPart.editorial_sequence = empty
model.pPart.editorial_sequenceOptional = empty
model.pPart.editorial_sequenceOptionalRepeatable = empty
model.pPart.editorial_sequenceRepeatable = notAllowed
model.pPart.transcriptional = del | unclear
model.pPart.transcriptional_alternation = del | unclear
model.pPart.transcriptional_sequence = del, unclear
model.pPart.transcriptional_sequenceOptional = del?, unclear?
model.pPart.transcriptional_sequenceOptionalRepeatable = del*, unclear*
model.pPart.transcriptional_sequenceRepeatable = del+, unclear+
model.pPart.edit = model.pPart.editorial | model.pPart.transcriptional
model.ptrLike = ref
model.lPart = notAllowed
model.global.meta = notAllowed
model.milestoneLike = pb | lb | anchor
model.gLike = notAllowed
model.oddDecl = notAllowed
model.oddDecl_alternation = notAllowed
model.oddDecl_sequence = empty
model.oddDecl_sequenceOptional = empty
model.oddDecl_sequenceOptionalRepeatable = empty
model.oddDecl_sequenceRepeatable = notAllowed
model.phrase.xml = notAllowed
model.specDescLike = notAllowed
model.biblLike = bibl
model.biblLike_alternation = bibl
model.biblLike_sequence = bibl
model.biblLike_sequenceOptional = bibl?
model.biblLike_sequenceOptionalRepeatable = bibl*
model.biblLike_sequenceRepeatable = bibl+
model.headLike = head
model.headLike_alternation = head
model.headLike_sequence = head
model.headLike_sequenceOptional = head?
model.headLike_sequenceOptionalRepeatable = head*
model.headLike_sequenceRepeatable = head+
model.labelLike = label
model.labelLike_alternation = label
model.labelLike_sequence = label
model.labelLike_sequenceOptional = label?
model.labelLike_sequenceOptionalRepeatable = label*
model.labelLike_sequenceRepeatable = label+
model.listLike = \list | table
model.listLike_alternation = \list | table
model.listLike_sequence = \list, table
model.listLike_sequenceOptional = \list?, table?
model.listLike_sequenceOptionalRepeatable = \list*, table*
model.listLike_sequenceRepeatable = \list+, table+
model.noteLike = note
model.lLike = l
model.lLike_alternation = l
model.lLike_sequence = l
model.lLike_sequenceOptional = l?
model.lLike_sequenceOptionalRepeatable = l*
model.lLike_sequenceRepeatable = l+
model.pLike = p
model.pLike_alternation = p
model.pLike_sequence = p
model.pLike_sequenceOptional = p?
model.pLike_sequenceOptionalRepeatable = p*
model.pLike_sequenceRepeatable = p+
model.stageLike = notAllowed
model.stageLike_alternation = notAllowed
model.stageLike_sequence = empty
model.stageLike_sequenceOptional = empty
model.stageLike_sequenceOptionalRepeatable = empty
model.stageLike_sequenceRepeatable = notAllowed
model.entryPart = notAllowed
model.global.edit = gap | space
model.divPart = model.lLike | model.pLike | lg
model.placeNamePart = placeName
model.placeNamePart_alternation = placeName
model.placeNamePart_sequence = placeName
model.placeNamePart_sequenceOptional = placeName?
model.placeNamePart_sequenceOptionalRepeatable = placeName*
model.placeNamePart_sequenceRepeatable = placeName+
model.placeStateLike = model.placeNamePart
model.placeStateLike_alternation = model.placeNamePart_alternation
model.placeStateLike_sequence = model.placeNamePart_sequence
model.placeStateLike_sequenceOptional = model.placeNamePart_sequenceOptional?
model.placeStateLike_sequenceOptionalRepeatable = model.placeNamePart_sequenceOptionalRepeatable*
model.placeStateLike_sequenceRepeatable = model.placeNamePart_sequenceRepeatable+
model.publicationStmtPart.agency = publisher
model.publicationStmtPart.detail = date | pubPlace | idno
model.certLike = notAllowed
model.descLike = notAllowed
model.glossLike = gloss
model.quoteLike = quote | cit
model.quoteLike_alternation = quote | cit
model.quoteLike_sequence = quote, cit
model.quoteLike_sequenceOptional = quote?, cit?
model.quoteLike_sequenceOptionalRepeatable = quote*, cit*
model.quoteLike_sequenceRepeatable = quote+, cit+
model.qLike = model.quoteLike
model.qLike_alternation = model.quoteLike_alternation
model.qLike_sequence = model.quoteLike_sequence
model.qLike_sequenceOptional = model.quoteLike_sequenceOptional?
model.qLike_sequenceOptionalRepeatable = model.quoteLike_sequenceOptionalRepeatable*
model.qLike_sequenceRepeatable = model.quoteLike_sequenceRepeatable+
model.respLike = editor
model.divWrapper = byline | dateline | salute | docDate
model.divTopPart = model.headLike | opener | signed
model.divTop = model.divWrapper | model.divTopPart
model.frontPart.drama = notAllowed
model.pLike.front = head | byline | docTitle | titlePart | docImprint | docDate
model.divBottomPart = closer | signed | postscript | attachment
model.divBottom = model.divWrapper | model.divBottomPart
model.titlepagePart = graphic | byline | docTitle | titlePart | docImprint | docDate
model.imprintPart = publisher | pubPlace
model.catDescPart = notAllowed
model.addressLike = affiliation
model.addressLike_alternation = affiliation
model.addressLike_sequence = affiliation
model.addressLike_sequenceOptional = affiliation?
model.addressLike_sequenceOptionalRepeatable = affiliation*
model.addressLike_sequenceRepeatable = affiliation+
model.nameLike =
    model.nameLike.agent | model.offsetLike | model.placeStateLike | idno | model.persNamePart
model.nameLike_alternation =
    model.nameLike.agent_alternation
    | model.offsetLike_alternation
    | model.placeStateLike_alternation
    | idno
    | model.persNamePart_alternation
model.nameLike_sequence =
    model.nameLike.agent_sequence,
    model.offsetLike_sequence,
    model.placeStateLike_sequence,
    idno,
    model.persNamePart_sequence
model.nameLike_sequenceOptional =
    model.nameLike.agent_sequenceOptional?,
    model.offsetLike_sequenceOptional?,
    model.placeStateLike_sequenceOptional?,
    idno?,
    model.persNamePart_sequenceOptional?
model.nameLike_sequenceOptionalRepeatable =
    model.nameLike.agent_sequenceOptionalRepeatable*,
    model.offsetLike_sequenceOptionalRepeatable*,
    model.placeStateLike_sequenceOptionalRepeatable*,
    idno*,
    model.persNamePart_sequenceOptionalRepeatable*
model.nameLike_sequenceRepeatable =
    model.nameLike.agent_sequenceRepeatable+,
    model.offsetLike_sequenceRepeatable+,
    model.placeStateLike_sequenceRepeatable+,
    idno+,
    model.persNamePart_sequenceRepeatable+
model.global = model.global.meta | model.milestoneLike | model.noteLike | model.global.edit | figure
model.biblPart = model.respLike | model.imprintPart | bibl
model.frontPart = model.frontPart.drama | titlePage
model.pPart.data = model.dateLike | model.measureLike | model.addressLike | model.nameLike
model.inter =
    model.egLike
    | model.oddDecl
    | model.biblLike
    | model.labelLike
    | model.listLike
    | model.stageLike
    | model.qLike
model.common = model.divPart | model.inter | \include
model.phrase =
    model.segLike
    | model.highlighted
    | model.graphicLike
    | model.pPart.msdesc
    | model.pPart.edit
    | model.ptrLike
    | model.lPart
    | model.phrase.xml
    | model.specDescLike
    | model.pPart.data
model.limitedPhrase =
    model.hiLike
    | model.emphLike
    | model.pPart.msdesc
    | model.pPart.editorial
    | model.ptrLike
    | model.phrase.xml
    | model.pPart.data
model.divLike = \div
model.divGenLike = notAllowed
model.div1Like = notAllowed
model.teiHeaderPart = encodingDesc | \include
model.sourceDescPart = notAllowed
model.encodingDescPart = editorialDecl | tagsDecl | styleDefDecl | classDecl
model.editorialDeclPart = correction
att.source.attributes = att.source.attribute.source
att.source.attribute.source =
    
    ## provides a pointer to the bibliographical source from which a quotation or citation is drawn.
    attribute source {
        list { data.pointer+ }
    }?
model.resourceLike = facsimile
p =
    
    ## (paragraph) Restrict @rend values for tei:p elements [3.1.  7.2.5. ]
    element p {
        macro.paraContent,
        att.global.attribute.xmlid,
        att.global.attribute.n,
        att.global.attribute.xmllang,
        att.global.attribute.style,
        att.global.attribute.rendition,
        att.global.attribute.xmlbase,
        att.global.attribute.xmlspace,
        att.global.linking.attribute.corresp,
        att.global.analytic.attribute.ana,
        att.global.facs.attribute.facs,
        att.global.change.attribute.change,
        
        ##
        attribute rend {
            
            ## (Flush left) 
            "flushleft"
            | 
              ## (Strong, bold) 
              "strong"
            | 
              ## (Italic, oblique) 
              "italic"
            | 
              ## (Italicized section titles) 
              "sectiontitleital"
            | 
              ## (Centered) 
              "center"
            | 
              ## (Right-aligned) 
              "right"
        }?,
        empty
    }
hi =
    
    ## (highlighted) Restrict @rend values for tei:hi elements [3.3.2.2.  3.3.2. ]
    element hi {
        macro.paraContent,
        att.global.attribute.xmlid,
        att.global.attribute.n,
        att.global.attribute.xmllang,
        att.global.attribute.style,
        att.global.attribute.rendition,
        att.global.attribute.xmlbase,
        att.global.attribute.xmlspace,
        att.global.linking.attribute.corresp,
        att.global.analytic.attribute.ana,
        att.global.facs.attribute.facs,
        att.global.change.attribute.change,
        
        ##
        attribute rend {
            
            ## (Strong, bold) 
            "strong"
            | 
              ## (Italic, oblique) 
              "italic"
            | 
              ## (Small caps) 
              "smallcaps"
            | 
              ## (Roman) 
              "roman"
            | 
              ## (Underline) 
              "underline"
            | 
              ## (Subscript) 
              "sub"
            | 
              ## (Superscript) 
              "superscript"
        },
        empty
    }
quote =
    
    ## (quotation) contains a phrase or passage attributed by the narrator or author to some agency external to the text. [3.3.3.  4.3.1. ]
    element quote {
        macro.specialPara, att.global.attributes, att.typed.attributes, att.source.attributes, empty
    }
cit =
    
    ## (cited quotation) contains a quotation from some other document, together with a bibliographic reference to its source. In a dictionary it may contain an example text with at least one occurrence of the word form, used in the sense being described, or a translation of the headword, or an example. [3.3.3.  4.3.1.  9.3.5.1. ]
    element cit {
        (model.qLike
         | model.egLike
         | model.biblLike
         | model.ptrLike
         | model.global
         | model.entryPart)+,
        att.global.attributes,
        att.typed.attributes,
        empty
    }
gloss =
    
    ## identifies a phrase or word used to provide a gloss or definition for some other word or phrase. [3.3.4.  22.4.1. ]
    element gloss {
        macro.phraseSeq,
        att.global.attributes,
        att.translatable.attributes,
        att.typed.attributes,
        att.pointing.attributes,
        att.cReferencing.attributes,
        empty
    }
term =
    
    ## contains a single-word, multi-word, or symbolic designation which is regarded as a technical term. [3.3.4. ]
    element term {
        macro.phraseSeq,
        att.global.attributes,
        att.pointing.attributes,
        att.typed.attributes,
        att.canonical.attributes,
        att.sortable.attributes,
        att.cReferencing.attributes,
        empty
    }
gap =
    
    ## indicates a point where material has been omitted in a transcription, whether for editorial reasons described in the TEI header, as part of sampling practice, or because the material is illegible, invisible, or inaudible. [3.4.3. ]
    element gap {
        (model.descLike | model.certLike)*,
        att.global.attributes,
        att.dimensions.attributes,
        
        ## gives the reason for omission. Sample values include sampling, inaudible, irrelevant, cancelled.
        attribute reason {
            list { data.word+ }
        }?,
        empty
    }
del =
    
    ## (deletion) contains a letter, word, or passage deleted, marked as deleted, or otherwise indicated as superfluous or spurious in the copy text by an author, scribe, or a previous annotator or corrector. [3.4.3. ]
    element del {
        macro.paraContent,
        att.global.attributes,
        att.transcriptional.attributes,
        att.typed.attributes,
        empty
    }
unclear =
    
    ## contains a word, phrase, or passage which cannot be transcribed with certainty because it is illegible or inaudible in the source. [11.3.3.1.  3.4.3. ]
    element unclear {
        macro.paraContent,
        att.global.attributes,
        
        ## indicates why the material is hard to transcribe.
        attribute reason {
            list { data.word+ }
        }?,
        
        ## Where the difficulty in transcription arises from action (partial deletion, etc.) assignable to an identifiable hand, signifies the hand responsible for the action.
        attribute hand { data.pointer }?,
        
        ## Where the difficulty in transcription arises from damage, categorizes the cause of the damage, if it can be identified.
        ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
        attribute agent { data.enumerated }?,
        empty
    }
name =
    
    ## (name, proper noun) contains a proper noun or noun phrase. [3.5.1. ]
    element name {
        macro.phraseSeq, att.global.attributes, att.datable.attributes, att.typed.attributes, empty
    }
date =
    
    ## Restrict @ana values for tei:date elements [3.5.4.  2.2.4.  2.5.  3.11.2.4.  15.2.3.  13.3.6. ]
    element date {
        (text | model.gLike | model.phrase | model.global)*,
        att.global.attribute.xmlid,
        att.global.attribute.n,
        att.global.attribute.xmllang,
        att.global.attribute.rend,
        att.global.attribute.style,
        att.global.attribute.rendition,
        att.global.attribute.xmlbase,
        att.global.attribute.xmlspace,
        att.global.linking.attribute.corresp,
        att.global.facs.attribute.facs,
        att.global.change.attribute.change,
        att.datable.attributes,
        att.typed.attributes,
        
        ##
        attribute ana {
            
            ## (The recorded date was determined to be an error via
            ##                                             content of the document and corrected Date value(s) 
            ##                                             were inferred from the content of the document) 
            "#date_apparent-typo-based-on-document-content"
            | 
              ## (The recorded date was determined to be an error via the
              ##                                             scanned version of the original document and corrected Date value(s) 
              ##                                             were inferred from the content of the scanned document) 
              "#date_apparent-typo-based-on-document-scan"
            | 
              ## (The recorded date was determined to be an error via
              ##                                             outside research and corrected date value(s) were inferred 
              ##                                             from related sources) 
              "#date_apparent-typo-based-on-outside-research"
            | 
              ## (The recorded date was determined to be an error by
              ##                                             typo based on nearest dated siblings and corrected date
              ##                                             value(s) were inferred from nearest dated
              ##                                             siblings) 
              "#date_apparent-typo-based-on-sibling-dates"
            | 
              ## (The recorded date was determined to be an error by the FRUS compiler/editor, 
              ##                                             who indicated the corrected date at the time of original publication.
              ##                                             Date value(s) were corrected based on compiler/editor notation.) 
              "#date_editorial-correction"
            | 
              ## (Imprecise date value(s) augmented with @notBefore and @notAfter 
              ##                                             inferred from nearest dated siblings) 
              "#date_imprecise-inferred-from-sibling-dates"
            | 
              ## (Imprecise date value(s) augmented with @notBefore and @notAfter 
              ##                                             inferred based on date rules (e.g. yyyy has @notBefore="yyyy-01-01"
              ##                                             and @notAfter="yyyy-12-31"; yyyy-mm has @notBefore="yyyy-mm-01" and 
              ##                                             @notAfter="yyyy-mm-dd" where dd is either 28, 29, 30, or 31 based 
              ##                                             on month and year)) 
              "#date_imprecise-inferred-from-date-rules"
            | 
              ## (Imprecise date value(s) augmented with @notBefore and @notAfter 
              ##                                             inferred from the content of the document) 
              "#date_imprecise-inferred-from-document-content"
            | 
              ## (Imprecise date value(s) augmented with @notBefore/@notAfter or
              ##                                              @when or @from/@to inferred from the document header)
              "#date_imprecise-inferred-from-document-head"
            | 
              ## (Imprecise date value(s) augmented with @notBefore and @notAfter 
              ##                                             inferred from the content of the scanned version of the original document) 
              "#date_imprecise-inferred-from-document-scan"
            | 
              ## (Imprecise date value(s) augmented with @notBefore and @notAfter 
              ##                                             inferred from the content of the document and nearest dated siblings) 
              "#date_imprecise-inferred-from-document-content-and-sibling-dates"
            | 
              ## (Imprecise date value(s) augmented with @notBefore and @notAfter 
              ##                                             inferred from related sources) 
              "#date_imprecise-inferred-from-outside-research"
            | 
              ## (Date value(s) for undated document were inferred from
              ##                                             the heading of its parent chapter) 
              "#date_undated-inferred-from-chapter-heading"
            | 
              ## (Date value(s) for undated document were inferred from
              ##                                             the content of the document) 
              "#date_undated-inferred-from-document-content"
            | 
              ## (Date value(s) for undated document were inferred from the 
              ##                                             content of the document and nearest dated siblings) 
              "#date_undated-inferred-from-document-content-and-sibling-dates"
            | 
              ## (Date value(s) for undated document were inferred from dates in 
              ##                                             document header, using an XQuery script to find date patterns) 
              "#date_undated-inferred-from-document-head"
            | 
              ## (Date value(s) for undated document were inferred from
              ##                                             the content of the scanned version of the original document) 
              "#date_undated-inferred-from-document-scan"
            | 
              ## (Date value(s) for undated document were inferred from
              ##                                            related sources) 
              "#date_undated-inferred-from-outside-research"
            | 
              ## (Date value(s) for undated document were inferred from
              ##                                             nearest dated siblings) 
              "#date_undated-inferred-from-sibling-dates"
            | 
              ## (Date value(s) for undated document were inferred from
              ##                                             volume date range and possibly outside research) 
              "#date_undated-inferred-from-volume-rules"
        }?,
        empty
    }
time =
    
    ## contains a phrase defining a time of day in any format. [3.5.4. ]
    element time {
        (text | model.gLike | model.phrase | model.global)*,
        att.global.attributes,
        att.datable.attributes,
        att.typed.attributes,
        empty
    }
ref =
    
    ## (reference) defines a reference to another location, possibly modified by additional text or comment. [3.6.  16.1. ]
    element ref {
        macro.paraContent
        >> sch:pattern [
               id = "frus-ref-refAtts-constraint-report-1"
               "\x{a}" ~
               "            "
               sch:rule [
                   context = "tei:ref"
                   "\x{a}" ~
                   "               "
                   sch:report [
                       test = "@target and @cRef"
                       "Only one of the\x{a}" ~
                       "	attributes @target' and @cRef' may be supplied on "
                       sch:name [ ]
                       "\x{a}" ~
                       "               "
                   ]
                   "\x{a}" ~
                   "            "
               ]
               "\x{a}" ~
               "         "
           ],
        att.global.attributes,
        att.pointing.attributes,
        att.typed.attributes,
        att.cReferencing.attributes,
        empty
    }
\list =
    
    ## Restrict @type values for tei:list elements [3.7. ]
    element list {
        ((model.divTop | model.global)*,
         ((item, model.global*)+ | (label, model.global*, item, model.global*)+),
         (model.divBottom, model.global*)*),
        att.global.attributes,
        att.sortable.attributes,
        att.typed.attribute.subtype,
        
        ##
        attribute type {
            
            ## (A list of participants, attendees, recipients
            ##                                             (appears at the beginning of a document)) 
            "participants"
            | 
              ## (A subject heading (appears at the beginning of a
              ##                                             document)) 
              "subject"
            | 
              ## (Back of book Index) 
              "index"
            | 
              ## (Front matter List of Terms &
              ##                                             Abbreviations) 
              "terms"
            | 
              ## (Front matter List of Persons) 
              "names"
            | 
              ## (Front matter Table of Contents) 
              "toc"
            | 
              ## (Front matter List of Sources) 
              "sources"
            | 
              ## (Document Recipients List) 
              "to"
            | 
              ## (Demarcates tightly-spaced text) 
              "simple"
            | 
              ## (Document References heading) 
              "references"
        }?,
        empty
    }
item =
    
    ## contains one component of a list. [3.7.  2.5. ]
    element item { macro.specialPara, att.global.attributes, att.sortable.attributes, empty }
label =
    
    ## contains any label or heading used to identify part of a text, typically but not exclusively in a list or glossary. [3.7. ]
    element label {
        macro.phraseSeq,
        att.global.attributes,
        att.typed.attributes,
        att.placement.attributes,
        empty
    }
head =
    
    ## (heading) Restrict @ana values for tei:head elements [4.2.1. ]
    element head {
        (text | lg | model.gLike | model.phrase | model.inter | model.lLike | model.global)*,
        att.global.attribute.xmlid,
        att.global.attribute.n,
        att.global.attribute.xmllang,
        att.global.attribute.rend,
        att.global.attribute.style,
        att.global.attribute.rendition,
        att.global.attribute.xmlbase,
        att.global.attribute.xmlspace,
        att.global.linking.attribute.corresp,
        att.global.facs.attribute.facs,
        att.global.change.attribute.change,
        att.typed.attributes,
        
        ##
        attribute ana {
            
            ## (The author and recipient were not included by the FRUS editor/compiler
            ##                             as they were determined to be the same as those of the preceding document.) 
            "#head_untitled-inferred-from-preceding-sibling-head"
        }?,
        empty
    }
note =
    
    ## contains a note or annotation. [3.8.1.  2.2.6.  3.11.2.8.  9.3.5.4. ]
    element note {
        macro.specialPara,
        att.global.attributes,
        att.placement.attributes,
        att.pointing.attributes,
        att.responsibility.attributes,
        att.typed.attributes,
        
        ## indicates whether the copy text shows the exact place of reference for the note.
        [ a:defaultValue = "true" ] attribute anchored { data.truthValue }?,
        
        ## points to the end of the span to which the note is attached, if the note is not embedded in the text at that point.
        attribute targetEnd {
            list { data.pointer+ }
        }?,
        empty
    }
graphic =
    
    ## indicates the location of an inline graphic, illustration, or figure. [3.9. ]
    element graphic {
        model.descLike*,
        att.global.attributes,
        att.media.attributes,
        att.resourced.attributes,
        empty
    }
pb =
    
    ## (page break) marks the start of a new page in a paginated document. [3.10.3. ]
    element pb {
        empty,
        att.global.attributes,
        att.typed.attributes,
        att.edition.attributes,
        att.spanning.attributes,
        empty
    }
lb =
    
    ## (line break) marks the start of a new (typographic) line in some edition or version of a text. [3.10.3.  7.2.5. ]
    element lb {
        empty,
        att.global.attributes,
        att.typed.attributes,
        att.edition.attributes,
        att.spanning.attributes,
        empty
    }
editor =
    
    ## contains a secondary statement of responsibility for a bibliographic item, for example the name of an individual, institution or organization, (or of several such) acting as editor, compiler, translator, etc. [3.11.2.2. ]
    element editor { macro.phraseSeq, att.global.attributes, att.naming.attributes, empty }
title =
    
    ## contains a title for any kind of work. [3.11.2.2.  2.2.1.  2.2.5. ]
    element title {
        macro.paraContent,
        att.global.attributes,
        att.canonical.attributes,
        att.typed.attribute.subtype,
        
        ## classifies the title according to some convenient typology.
        ## Sample values include: 1] main; 2] sub(subordinate) ; 3] alt(alternate) ; 4] short; 5] desc(descriptive) 
        attribute type { data.enumerated }?,
        
        ## indicates the bibliographic level for a title, that is, whether it identifies an article, book, journal, series, or unpublished material.
        attribute level {
            
            ## (analytic) the title applies to an analytic item, such as an article, poem, or other work published as part of a larger item.
            "a"
            | 
              ## (monographic) the title applies to a monograph such as a book or other item considered to be a distinct publication, including single volumes of multi-volume works
              "m"
            | 
              ## (journal) the title applies to any serial or periodical publication such as a journal, magazine, or newspaper
              "j"
            | 
              ## (series) the title applies to a series of otherwise distinct publications such as a collection
              "s"
            | 
              ## (unpublished) the title applies to any unpublished material (including theses and dissertations unless published by a commercial press)
              "u"
        }?,
        empty
    }
publisher =
    
    ## provides the name of the organization responsible for the publication or distribution of a bibliographic item. [3.11.2.4.  2.2.4. ]
    element publisher { macro.phraseSeq, att.global.attributes, empty }
pubPlace =
    
    ## (publication place) contains the name of the place where a bibliographic item was published. [3.11.2.4. ]
    element pubPlace { macro.phraseSeq, att.global.attributes, att.naming.attributes, empty }
bibl =
    
    ## (bibliographic citation) contains a loosely-structured bibliographic citation of which the sub-components may or may not be explicitly tagged. [3.11.1.  2.2.7.  15.3.2. ]
    element bibl {
        (text
         | model.gLike
         | model.highlighted
         | model.pPart.data
         | model.pPart.edit
         | model.segLike
         | model.ptrLike
         | model.biblPart
         | model.global)*,
        att.global.attributes,
        att.typed.attributes,
        att.sortable.attributes,
        empty
    }
l =
    
    ## (verse line) contains a single, possibly incomplete, line of verse. [3.12.1.  3.12.  7.2.5. ]
    element l { macro.paraContent, att.global.attributes, empty }
lg =
    
    ## (line group) contains one or more verse lines functioning as a formal unit, e.g. a stanza, refrain, verse paragraph, etc. [3.12.1.  3.12.  7.2.5. ]
    element lg {
        ((model.divTop | model.global)*,
         (model.lLike | model.stageLike | model.labelLike | lg),
         (model.lLike | model.stageLike | model.labelLike | model.global | lg)*,
         (model.divBottom, model.global*)*)
        >> sch:pattern [
               id = "frus-lg-atleast1oflggapl-constraint-assert-6"
               "\x{a}" ~
               "            "
               sch:rule [
                   context = "tei:lg"
                   "\x{a}" ~
                   "               "
                   sch:assert [
                       test = "count(descendant::tei:lg|descendant::tei:l|descendant::tei:gap) > 0"
                       "An lg element\x{a}" ~
                       "        must contain at least one child l, lg or gap element."
                   ]
                   "\x{a}" ~
                   "            "
               ]
               "\x{a}" ~
               "         "
           ],
        att.global.attributes,
        att.divLike.attributes,
        att.typed.attributes,
        empty
    }
teiHeader =
    
    ## (TEI header) supplies the descriptive and declarative information making up an electronic title page for every TEI-conformant document. [2.1.1.  15.1. ]
    element teiHeader {
        (fileDesc, model.teiHeaderPart*, revisionDesc?),
        att.global.attributes,
        
        ## specifies the kind of document to which the header is attached, for example whether it is a corpus or individual text.
        ## Sample values include: 1] text; 2] corpus
        [ a:defaultValue = "text" ] attribute type { data.enumerated }?,
        empty
    }
fileDesc =
    
    ## (file description) contains a full bibliographic description of an electronic file. [2.2.  2.1.1. ]
    element fileDesc {
        ((titleStmt, publicationStmt), sourceDesc+),
        att.global.attributes,
        empty
    }
titleStmt =
    
    ## (title statement) groups information about the title of a work and those responsible for its content. [2.2.1.  2.2. ]
    element titleStmt { (title+, model.respLike*), att.global.attributes, empty }
publicationStmt =
    
    ## (publication statement) groups information concerning the publication or distribution of an electronic or other text. [2.2.4.  2.2. ]
    element publicationStmt {
        ((model.publicationStmtPart.agency, model.publicationStmtPart.detail*)+ | model.pLike+),
        att.global.attributes,
        empty
    }
idno =
    
    ## (identifier) supplies any form of identifier used to identify some object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized way. [2.2.4.  2.2.5.  3.11.2.4. ]
    element idno {
        (text | model.gLike | idno)*,
        att.global.attributes,
        att.sortable.attributes,
        
        ## categorizes the identifier, for example as an ISBN, Social Security number, etc.
        attribute type { data.enumerated }?,
        empty
    }
sourceDesc =
    
    ## (source description) describes the source from which an electronic text was derived or generated, typically a bibliographic description in the case of a digitized text, or a phrase such as "born digital" for a text which has no previous existence. [2.2.7. ]
    element sourceDesc {
        (model.pLike+ | (model.biblLike | model.sourceDescPart | model.listLike)+),
        att.global.attributes,
        empty
    }
encodingDesc =
    
    ## (encoding description) documents the relationship between an electronic text and the source or sources from which it was derived. [2.3.  2.1.1. ]
    element encodingDesc { (model.encodingDescPart | model.pLike)+, att.global.attributes, empty }
editorialDecl =
    
    ## (editorial practice declaration) provides details of editorial principles and practices applied during the encoding of a text. [2.3.3.  2.3.  15.3.2. ]
    element editorialDecl { (model.pLike | model.editorialDeclPart)+, att.global.attributes, empty }
correction =
    
    ## (correction principles) states how and under what circumstances corrections have been made in the text. [2.3.3.  15.3.2. ]
    element correction {
        model.pLike+,
        att.global.attributes,
        
        ## indicates the degree of correction applied to the text.
        [ a:defaultValue = "unknown" ]
        attribute status {
            
            ## the text has been thoroughly checked and proofread.
            "high"
            | 
              ## the text has been checked at least once.
              "medium"
            | 
              ## the text has not been checked.
              "low"
            | 
              ## the correction status of the text is unknown.
              "unknown"
        }?,
        
        ## indicates the method adopted to indicate corrections within the text.
        [ a:defaultValue = "silent" ]
        attribute method {
            
            ## corrections have been made silently
            "silent"
            | 
              ## corrections have been represented using markup
              "markup"
        }?,
        empty
    }
tagsDecl =
    
    ## (tagging declaration) provides detailed information about the tagging applied to a document. [2.3.4.  2.3. ]
    element tagsDecl { rendition*, att.global.attributes, empty }
rendition =
    
    ## supplies information about the rendition or appearance of one or more elements in the source text. [2.3.4. ]
    element rendition {
        macro.limitedContent,
        att.global.attributes,
        att.styleDef.attributes,
        
        ## where CSS is used, provides a way of defining pseudo-elements, that is, styling rules applicable to specific sub-portions of an element.
        ## Sample values include: 1] first-line; 2] first-letter; 3] before; 4] after
        attribute scope { data.enumerated }?,
        empty
    }
styleDefDecl =
    
    ## (style definition language declaration) specifies the name of the formal language in which style or renditional information is supplied elsewhere in the document. The specific version of the scheme may also be supplied. [2.3.5. ]
    element styleDefDecl { model.pLike*, att.global.attributes, att.styleDef.attributes, empty }
classDecl =
    
    ## (classification declarations) contains one or more taxonomies defining any classificatory codes used elsewhere in the text. [2.3.7.  2.3. ]
    element classDecl { taxonomy+, att.global.attributes, empty }
taxonomy =
    
    ## defines a typology either implicitly, by means of a bibliographic citation, or explicitly by a structured taxonomy. [2.3.7. ]
    element taxonomy {
        ((model.glossLike | model.descLike)* | category+ | (model.biblLike, category*)),
        att.global.attributes,
        empty
    }
category =
    
    ## contains an individual descriptive category, possibly nested within a superordinate category, within a user-defined taxonomy. [2.3.7. ]
    element category {
        ((catDesc+ | (model.descLike | model.glossLike)*),
         category*),
        att.global.attributes,
        empty
    }
catDesc =
    
    ## (category description) describes some category within a taxonomy or text typology, either in the form of a brief prose description or in terms of the situational parameters used by the TEI formal textDesc. [2.3.7. ]
    element catDesc {
        (text | model.limitedPhrase | model.catDescPart)*, att.global.attributes, empty
    }
revisionDesc =
    
    ## (revision description) summarizes the revision history for a file. [2.5.  2.1.1. ]
    element revisionDesc { (\list | change+), att.global.attributes, empty }
change =
    
    ## documents a change or set of changes made during the production of a source document, or during the revision of an electronic file. [2.5.  2.4.1.  11.7. ]
    element change {
        macro.specialPara,
        att.ascribed.attributes,
        att.datable.attributes,
        att.global.attributes,
        att.typed.attributes,
        
        ## points to one or more elements that belong to this change.
        attribute target {
            list { data.pointer+ }
        }?,
        empty
    }
TEI =
    
    ## (TEI document) contains a single TEI-conformant document, comprising a TEI header and a text, either in isolation or as part of a teiCorpus element. [4.  15.1. ]
    element TEI {
        (teiHeader,
         ((model.resourceLike+, \text?) | \text))
        >> sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
        >> sch:ns [ prefix = "xs" uri = "http://www.w3.org/2001/XMLSchema" ]
        >> sch:ns [ prefix = "rng" uri = "http://relaxng.org/ns/structure/1.0" ],
        att.global.attributes,
        
        ## specifies the major version number of the TEI Guidelines against which this document is valid.
        attribute version { data.version }?,
        empty
    }
\text =
    
    ## contains a single text of any kind, whether unitary or composite, for example a poem or drama, a collection of essays, a novel, a dictionary, or a corpus sample. [4.  15.1. ]
    element text {
        (model.global*, (front, model.global*)?, body, model.global*, (back, model.global*)?),
        att.global.attributes,
        att.typed.attributes,
        empty
    }
body =
    
    ## (text body) contains the whole body of a single unitary text, excluding any front or back matter. [4. ]
    element body {
        (model.global*,
         (model.divTop, (model.global | model.divTop)*)?,
         (model.divGenLike, (model.global | model.divGenLike)*)?,
         ((model.divLike, (model.global | model.divGenLike)*)+
          | (model.div1Like, (model.global | model.divGenLike)*)+
          | ((model.common, model.global*)+,
             ((model.divLike, (model.global | model.divGenLike)*)+
              | (model.div1Like, (model.global | model.divGenLike)*)+)?)),
         (model.divBottom, model.global*)*),
        att.global.attributes,
        empty
    }
\div =
    
    ## (text division) Restrict @type values for tei:div elements [4.1. ]
    element div {
        ((model.divTop | model.global)*,
         ((((model.divLike | model.divGenLike), model.global*)+
           | ((model.common, model.global*)+,
              ((model.divLike | model.divGenLike), model.global*)*)),
          (model.divBottom, model.global*)*)?),
        att.global.attributes,
        att.divLike.attributes,
        att.typed.attribute.subtype,
        
        ##
        attribute type {
            
            ## (Document) 
            "document"
            | 
              ## (Section) 
              "section"
            | 
              ## (Compilation) 
              "compilation"
            | 
              ## (Chapter) 
              "chapter"
            | 
              ## (Sub-chapter) 
              "subchapter"
            | 
              ## (Table of Contents) 
              "toc"
        },
        
        ## A UTC-normalized form of the lower bound of the document's date (machine-derived from the dateline)
        attribute frus:doc-dateTime-min { xsd:dateTime }?,
        
        ## A UTC-normalized form of the upper bound of the document's date (machine-derived from the dateline)
        attribute frus:doc-dateTime-max { xsd:dateTime }?,
        empty
    }
byline =
    
    ## contains the primary statement of responsibility given for a work on its title page or at the head or end of the work. [4.2.2.  4.5. ]
    element byline {
        (text | model.gLike | model.phrase | model.global)*, att.global.attributes, empty
    }
dateline =
    
    ## contains a brief description of the place, date, time, etc. of production of a letter, newspaper story, or other work, prefixed or suffixed to it as a kind of heading or trailer. [4.2.2. ]
    element dateline {
        (text | model.gLike | model.phrase | model.global | docDate)*, att.global.attributes, empty
    }
opener =
    
    ## groups together dateline, byline, salutation, and similar phrases appearing as a preliminary group at the start of a division, especially of a letter. [4.2. ]
    element opener {
        (text | model.gLike | model.phrase | byline | dateline | salute | signed | model.global)*,
        att.global.attributes,
        empty
    }
closer =
    
    ## groups together salutations, datelines, and similar phrases appearing as a final group at the end of a division, especially of a letter. [4.2.2.  4.2. ]
    element closer {
        (text | model.gLike | signed | dateline | salute | model.phrase | model.global)*,
        att.global.attributes,
        empty
    }
salute =
    
    ## (salutation) contains a salutation or greeting prefixed to a foreword, dedicatory epistle, or other division of a text, or the salutation in the closing of a letter, preface, etc. [4.2.2. ]
    element salute { macro.paraContent, att.global.attributes, empty }
signed =
    
    ## (signature) contains the closing salutation, etc., appended to a foreword, dedicatory epistle, or other division of a text. [4.2.2. ]
    element signed { macro.paraContent, att.global.attributes, empty }
postscript =
    
    ## contains a postscript, e.g. to a letter. [4.2. ]
    element postscript {
        ((model.global | model.divTopPart)*,
         model.common,
         (model.global | model.common)*,
         (model.divBottomPart, model.global*)*),
        att.global.attributes,
        empty
    }
titlePage =
    
    ## (title page) contains the title page of a text, appearing within the front or back matter. [4.6. ]
    element titlePage {
        (model.global*, model.titlepagePart, (model.titlepagePart | model.global)*),
        att.global.attributes,
        
        ## classifies the title page according to any convenient typology.
        attribute type { data.enumerated }?,
        empty
    }
docTitle =
    
    ## (document title) contains the title of a document, including all its constituents, as given on a title page. [4.6. ]
    element docTitle {
        (model.global*, (titlePart, model.global*)+),
        att.global.attributes,
        att.canonical.attributes,
        empty
    }
titlePart =
    
    ## contains a subsection or division of the title of a work, as indicated on a title page. [4.6. ]
    element titlePart {
        macro.paraContent,
        att.global.attributes,
        
        ## specifies the role of this subdivision of the title.
        ## Suggested values include: 1] main; 2] sub(subordinate) ; 3] alt(alternate) ; 4] short; 5] desc(descriptive) 
        [ a:defaultValue = "main" ]
        attribute type {
            
            ## main title of the work
            "main"
            | 
              ## (subordinate) subtitle of the work
              "sub"
            | 
              ## (alternate) alternative title of the work
              "alt"
            | 
              ## abbreviated form of title
              "short"
            | 
              ## (descriptive) descriptive paraphrase of the work
              "desc"
            | xsd:Name
        }?,
        empty
    }
docImprint =
    
    ## (document imprint) contains the imprint statement (place and date of publication, publisher name), as given (usually) at the foot of a title page. [4.6. ]
    element docImprint {
        (text | model.gLike | model.phrase | pubPlace | docDate | publisher | model.global)*,
        att.global.attributes,
        empty
    }
docDate =
    
    ## (document date) contains the date of a document, as given on a title page or in a dateline. [4.6. ]
    element docDate {
        macro.phraseSeq,
        att.global.attributes,
        
        ## gives the value of the date in standard form, i.e. YYYY-MM-DD.
        attribute when { data.temporal.w3c }?,
        empty
    }
front =
    
    ## (front matter) contains any prefatory matter (headers, title page, prefaces, dedications, etc.) found at the start of a document, before the main body. [4.6.  4. ]
    element front {
        ((model.frontPart | model.pLike | model.pLike.front | model.global)*,
         (((model.div1Like, (model.div1Like | model.frontPart | model.global)*)
           | (model.divLike, (model.divLike | model.frontPart | model.global)*)),
          (model.divBottom, (model.divBottom | model.global)*)?)?),
        att.global.attributes,
        empty
    }
back =
    
    ## (back matter) contains any appendixes, etc. following the main part of a text. [4.7.  4. ]
    element back {
        ((model.frontPart | model.pLike.front | model.pLike | model.listLike | model.global)*,
         ((model.div1Like, (model.frontPart | model.div1Like | model.global)*)
          | (model.divLike, (model.frontPart | model.divLike | model.global)*))?,
         (model.divBottomPart, (model.divBottomPart | model.global)*)?),
        att.global.attributes,
        empty
    }
att.datable.custom.attributes =
    att.datable.custom.attribute.when-custom,
    att.datable.custom.attribute.notBefore-custom,
    att.datable.custom.attribute.notAfter-custom,
    att.datable.custom.attribute.from-custom,
    att.datable.custom.attribute.to-custom,
    att.datable.custom.attribute.datingPoint,
    att.datable.custom.attribute.datingMethod
att.datable.custom.attribute.when-custom =
    
    ## supplies the value of a date or time in some standard form.
    attribute when-custom {
        list { data.word+ }
    }?
att.datable.custom.attribute.notBefore-custom =
    
    ## specifies the earliest possible date for the event in some custom standard form.
    attribute notBefore-custom {
        list { data.word+ }
    }?
att.datable.custom.attribute.notAfter-custom =
    
    ## specifies the latest possible date for the event in some custom standard form.
    attribute notAfter-custom {
        list { data.word+ }
    }?
att.datable.custom.attribute.from-custom =
    
    ## indicates the starting point of the period in some standard form.
    attribute from-custom {
        list { data.word+ }
    }?
att.datable.custom.attribute.to-custom =
    
    ## indicates the ending point of the period in some standard form.
    attribute to-custom {
        list { data.word+ }
    }?
att.datable.custom.attribute.datingPoint =
    
    ## supplies a pointer to some location defining a named point in time with reference to which the datable item is understood to have occurred
    attribute datingPoint { data.pointer }?
att.datable.custom.attribute.datingMethod =
    
    ## supplies a pointer to a calendar element or other means of interpreting the values of the custom dating attributes.
    attribute datingMethod { data.pointer }?
model.persNamePart = notAllowed
model.persNamePart_alternation = notAllowed
model.persNamePart_sequence = empty
model.persNamePart_sequenceOptional = empty
model.persNamePart_sequenceOptionalRepeatable = empty
model.persNamePart_sequenceRepeatable = notAllowed
att.datable.iso.attributes =
    att.datable.iso.attribute.when-iso,
    att.datable.iso.attribute.notBefore-iso,
    att.datable.iso.attribute.notAfter-iso,
    att.datable.iso.attribute.from-iso,
    att.datable.iso.attribute.to-iso
att.datable.iso.attribute.when-iso =
    
    ## supplies the value of a date or time in a standard form.
    attribute when-iso { data.temporal.iso }?
att.datable.iso.attribute.notBefore-iso =
    
    ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
    attribute notBefore-iso { data.temporal.iso }?
att.datable.iso.attribute.notAfter-iso =
    
    ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
    attribute notAfter-iso { data.temporal.iso }?
att.datable.iso.attribute.from-iso =
    
    ## indicates the starting point of the period in standard form.
    attribute from-iso { data.temporal.iso }?
att.datable.iso.attribute.to-iso =
    
    ## indicates the ending point of the period in standard form.
    attribute to-iso { data.temporal.iso }?
orgName =
    
    ## (organization name) contains an organizational name. [13.2.2. ]
    element orgName {
        macro.phraseSeq, att.global.attributes, att.datable.attributes, att.typed.attributes, empty
    }
persName =
    
    ## (personal name) contains a proper noun or proper-noun phrase referring to a person, possibly including one or more of the person's forenames, surnames, honorifics, added names, etc. [13.2.1. ]
    element persName {
        macro.phraseSeq, att.global.attributes, att.datable.attributes, att.typed.attributes, empty
    }
placeName =
    
    ## contains an absolute or relative place name. [13.2.3. ]
    element placeName {
        macro.phraseSeq, att.datable.attributes, att.global.attributes, att.typed.attributes, empty
    }
affiliation =
    
    ## contains an informal description of a person's present or past affiliation with some organization, for example an employer or sponsor. [15.2.2. ]
    element affiliation {
        macro.phraseSeq, att.global.attributes, att.datable.attributes, att.naming.attributes, empty
    }
table =
    
    ## contains text displayed in tabular form, in rows and columns. [14.1.1. ]
    element table {
        ((model.headLike | model.global)*,
         ((row, model.global*)+ | (model.graphicLike, model.global*)+),
         (model.divBottom, model.global*)*),
        att.global.attributes,
        
        ## indicates the number of rows in the table.
        attribute rows { data.count }?,
        
        ## (columns) indicates the number of columns in each row of the table.
        attribute cols { data.count }?,
        empty
    }
row =
    
    ## contains one row of a table. [14.1.1. ]
    element row { cell+, att.global.attributes, att.tableDecoration.attributes, empty }
cell =
    
    ## contains one cell of a table. [14.1.1. ]
    element cell { macro.specialPara, att.global.attributes, att.tableDecoration.attributes, empty }
figure =
    
    ## groups elements representing or containing graphic information such as an illustration, formula, or figure. [14.4. ]
    element figure {
        (model.headLike | model.common | model.graphicLike | model.global | model.divBottom)*,
        att.global.attributes,
        att.placement.attributes,
        att.typed.attributes,
        empty
    }
att.global.linking.attributes = att.global.linking.attribute.corresp
att.global.linking.attribute.corresp =
    
    ## (corresponds) points to elements that correspond to the current element in some way.
    attribute corresp {
        list { data.pointer+ }
    }?
anchor =
    
    ## (anchor point) attaches an identifier to a point within a text, whether or not it corresponds with a textual element. [8.4.2.  16.4. ]
    element anchor { empty, att.global.attributes, att.typed.attributes, empty }
seg =
    
    ## (arbitrary segment) represents any segmentation of text below the chunk level. [16.3.  6.2.  7.2.5. ]
    element seg {
        macro.paraContent,
        att.global.attributes,
        att.segLike.attributes,
        att.typed.attributes,
        att.responsibility.attributes,
        empty
    }
att.global.facs.attributes = att.global.facs.attribute.facs
att.global.facs.attribute.facs =
    
    ## (facsimile) points to all or part of an image which corresponds with the content of the element.
    attribute facs {
        list { data.pointer+ }
    }?
att.global.change.attributes = att.global.change.attribute.change
att.global.change.attribute.change =
    
    ## points to one or more change elements documenting a state or revision campaign to which the element bearing this attribute and its children have been assigned by the encoder.
    attribute change {
        list { data.pointer+ }
    }?
facsimile =
    
    ## contains a representation of some written source in the form of a set of images rather than as transcribed or encoded text. [11.1. ]
    element facsimile { (front?, model.graphicLike+, back?), att.global.attributes, empty }
space =
    
    ## indicates the location of a significant space in the copy text. [11.5.1. ]
    element space {
        (model.descLike | model.certLike)*,
        att.global.attributes,
        att.dimensions.attributes,
        att.responsibility.attribute.cert,
        att.source.attribute.source,
        
        ## (responsible party) (responsible party) indicates the individual responsible for identifying and measuring the space
        attribute resp {
            list { data.pointer+ }
        }?,
        
        ## (dimension) indicates whether the space is horizontal or vertical.
        attribute dim {
            
            ## the space is horizontal.
            "horizontal"
            | 
              ## the space is vertical.
              "vertical"
        }?,
        empty
    }
att.global.analytic.attributes = att.global.analytic.attribute.ana
att.global.analytic.attribute.ana =
    
    ## (analysis) indicates one or more elements containing interpretations of the element on which the ana attribute appears.
    attribute ana {
        list { data.pointer+ }
    }?
classification =
    
    ## provides structured information about a classification marking
    element frus:classification {
        macro.paraContent,
        att.global.attributes,
        
        ##
        attribute level {
            
            ## (Top Secret (TS)) 
            "ts"
            | 
              ## (Secret (S)) 
              "s"
            | 
              ## (Unclassified (U)) 
              "u"
            | 
              ## (Sensitive But Unclassified (SBU)) 
              "sbu"
            | 
              ## (Confidential (C)) 
              "c"
            | 
              ## (Secure Compartmentalized Information (SCI)) 
              "sci"
            | 
              ## (No Classification Marking) 
              "na"
        }?,
        empty
    }
attachment =
    
    ## Indicates the segment of a document where an attachment begins. To be used for attachments, tabs, enclosures, etc. Like closer, may only be used at the end of a div.
    element frus:attachment {
        ((model.divTop | model.global)*,
         ((((model.divLike | model.divGenLike), model.global*)+
           | ((model.common, model.global*)+,
              ((model.divLike | model.divGenLike), model.global*)*)),
          (model.divBottom, model.global*)*)?),
        att.global.attributes,
        empty
    }
\include =
    
    ## The W3C XInclude element
    element xi:include {
        fallback?,
        
        ## pointer to the resource being included
        attribute href { data.pointer }?,
        
        ##
        [ a:defaultValue = "xml" ]
        attribute parse {
            
            ##
            "xml"
            | 
              ##
              "text"
        }?,
        
        ##
        attribute xpointer { text }?,
        
        ##
        attribute encoding { text }?,
        
        ##
        attribute accept { text }?,
        
        ##
        attribute accept-charset { text }?,
        
        ##
        attribute accept-language { text }?,
        empty
    }
fallback =
    
    ## Wrapper for fallback elements if an XInclude fails
    element xi:fallback { text+ }
start = TEI
